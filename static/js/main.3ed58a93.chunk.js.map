{"version":3,"sources":["pages/resume/resume-page.component.jsx","components/toggleButton/toggleButton.component.jsx","components/nav-bar/nav-bar.component.jsx","pages/homepage/homepage.component.jsx","pages/projects/projects.component.jsx","components/footer/footer.component.jsx","components/sidebar/sidebar.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ResumePage","className","id","href","target","rel","ToggleButton","props","onClick","click","NavBar","sideBarClickHandler","HomePage","src","alt","ProjectsPage","FooterNav","SideBar","App","sideBarToggleClickHandler","setState","prevState","sideBarOpen","state","Content","this","style","height","closeSideBarHandler","closeSideBarClickHandler","exact","path","component","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ed58a93.chunk.js","sourcesContent":["import React from 'react'; \n\nimport './resume-page.styles.scss'; \n\n// Functional Component - Resume Page\nconst ResumePage = () => (\n    <div className='resume_wrapper'>\n        <div className='resume_container'>\n            <h1 className='resume_heading' id='resume_heading'>Resume</h1> \n            <h2 className='resume_socials'>Internet Profiles</h2>\n            <p>\n                <a href='https://github.com/alxdelgado' target='_blank' rel=\"noopener noreferrer\">Github</a>\n                <br/>\n                <a href='https://stackoverflow.com/users/11500185/alxdelgado' target='_blank' rel=\"noopener noreferrer\">StackOverflow</a>\n                <br/>\n                <a href='https://www.linkedin.com/in/alexdelgadous/' target='_blank' rel=\"noopener noreferrer\">LinkedIn</a>\n            </p>\n            <h1>Professional Experience</h1>\n            <h3>Software Engineering Immersive, General Assembly</h3>\n            <em>Jun 2018 - Sep 2018 | Chicago, IL</em> \n            <p>At GA, we dove into software development environment, learned the basics of computing, networks, and data structures. We then began learning to build applications from the ground up using Javascript and front end frameworks like React. Incorporated functionality from Third Party APIs and added complexity and nuance with Node.js, and PostgreSql.</p>\n            <h3>Business Development Associate, Replicon</h3>\n            <em>Apr 2017 - Jun 2018 | Chicago, IL</em>\n            <p>Replicon is a software company providing cloud time tracking applications. My role in the Biz Dev team was to secure mid-sized engagement, exceed monthly meeting quota, and track all client communication, prospects, leads and proposals to close in Salesforce.</p>\n            <h1>Education</h1>\n            <h3>Columbia College Chicago</h3>\n            <em>Sep 2012 - May 2015 | Bachelor of Arts</em>\n            <h3>General Assembly</h3>\n            <em>Jun 2018 - Sep 2018 | Software Engineering Immersive</em>\n\n        </div>\n    </div>  \n); \n\nexport default ResumePage;\n","import React from 'react'; \n\nimport './toggleButton.styles.scss';\n\nconst ToggleButton = props => (\n   <button className='toggle-button' onClick={props.click}>\n       <div className='toggle-button_line' />\n       <div className='toggle-button_line' />\n       <div className='toggle-button_line' />\n   </button>\n); \n\nexport default ToggleButton; \n\n\n\n\n\n\n\n// TRYING TO IMPLEMENT A RESUABLE TOGGLE BUTTON\n// class ToggleButton extends React.Component {\n//     state = {\n//         on: false,\n//     }\n\n//     toggle = () => {\n//         this.setState({\n//             on: !this.state.on\n//         })\n//     }\n\n//     render () {\n//         return (\n//             <div>\n//                 {\n//                     this.state.on && (\n//                         <button className='toggle-button' onClick={this.toggle}>\n//                             <div className='toggle-button_line' />\n//                             <div className='toggle-button_line' />\n//                             <div className='toggle-button_line' />\n//                         </button>\n//                     )\n//                 }\n//                 <button className='toggle-button' onClick={this.toggle}>\n//                     <div className='toggle-button_line' />\n//                     <div className='toggle-button_line' />\n//                     <div className='toggle-button_line' />\n//                 </button>\n//             </div>\n//         )\n//     }\n// }\n\n// export default ToggleButton;","import React from 'react';\n\nimport './nav-bar.styles.scss';\nimport ToggleButton from '../toggleButton/toggleButton.component';\n\n\n\n\n \n\n// NavBar \nconst NavBar = props => (\n    <div className='nav_wrapper'>\n        <ToggleButton click={props.sideBarClickHandler} />\n        \n        <div className='nav-container'>\n            <li className='headline_link'>\n                <a id='headline' href='/'><strong>Delgado</strong></a>\n            </li>\n            <li className='resume_link'>\n                <a id='resume' href='/resume'>Resume</a>\n            </li>\n            <li className='bucket-list_link'>\n                <a id='bucket-list' href='/projects'>Projects</a>\n            </li>\n            <li className='github'>\n                <a id='github' href='https://github.com/alxdelgado' target='_blank' rel=\"noopener noreferrer\">Github</a>\n            </li>\n        </div>\n    </div>\n);\n\nexport default NavBar; \n","import React from 'react'; \n\nimport './homepage.styles.scss';\n\n\n// Functional Home Page Component\nconst HomePage = () => (\n    <div className='homepage_wrapper'>\n        <div className='homepage_container'>\n            <img className='homepage_image' id='alex_sick_photo' src='alex_arbella.jpg' alt='profile headshot'></img>\n            <h2 className='homepage_title' id='alex_heading'>Alex Delgado</h2>\n        </div>\n    </div>\n); \n\nexport default HomePage; \n ","import React from 'react'; \nimport './projects.styles.scss'; \n\nconst ProjectsPage = props => (\n    <div className='projects_wrapper'>\n        <div className='projects_container'>\n            <h1 className='projects_heading'>Crown Clothing</h1>\n            <p>Crown-Clothing is an Ecommerce platform using React, Redux and Firebase. With this application you can log in, choose items and checkout using the Stripe API.</p>\n            <a href='https://crwnclothing-live-shop-popup.herokuapp.com/' target='_blank' rel=\"noopener noreferrer\"><img className='crown-clothing-app' src='/Crown-Clothing.png' alt='projectimage'/></a>\n        </div>\n    </div>\n); \n\nexport default ProjectsPage; \n","import React from 'react'; \n\nimport './footer.styles.scss'; \n\n\n\n// Functional Footer Component\nconst FooterNav = () => (\n    <footer className='footer'>\n        <div className='footer_container'>\n                <div className='footer_col' id='column_pro'>\n                    <h4 className='footer_title' id='professional_heading'>Professional</h4>\n                    <ul className='footer_items' id='items_pro'>\n\n                        <li className='footer_item'>\n                            <a href=\"https://github.com/alxdelgado\" className='footer_link-item' target='_blank' rel=\"noopener noreferrer\">Github</a>\n                        </li>\n                        <li className='footer_item'>\n                            <a href=\"https://stackoverflow.com/users/11500185/alxdelgado\" className='footer_link-item' target='_blank' rel=\"noopener noreferrer\">StackOverflow</a>\n                        </li>\n                        <li className='footer_item'>\n                            <a href=\"https://www.linkedin.com/in/alexdelgadous/\" className='footer_link-item' target='_blank' rel=\"noopener noreferrer\">LinkedIn</a>\n                        </li>\n\n                    </ul>\n                </div>\n\n                <div className='footer_col' id='column_socials'>\n                    <h4 className='footer_title' id='socials_heading'>Social</h4>\n                    <ul className='footer-items' id='items_socials'>\n\n                        <li className='footer_item'>\n                            <a href='/' className='footer_link-item'>Medium</a>\n                        </li>\n                        <li className='footer_item'>\n                            <a href='/' className='footer_link-item'>Twitter</a>\n                        </li>\n\n                    </ul>\n                </div>\n        </div>\n    </footer>\n); \n\nexport default FooterNav;\n\n\n","import React from 'react'; \n\nimport './sidebar.styles.scss'; \n\nconst SideBar = props => (\n    <nav className='sideBar'>\n        <ul>\n            <li><a href='/'>Home</a></li>\n            <li><a href='/resume'>Resume</a></li>\n            <li><a href='/projects'>Projects</a></li>\n            <li><a href='https://github.com/alxdelgado' target='_blank' rel=\"noopener noreferrer\">Github</a></li>\n        </ul> \n    </nav>\n); \n\nexport default SideBar; \n","import React from 'react';\nimport { BrowserRouter as Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport ResumePage from './pages/resume/resume-page.component';\nimport NavBar from './components/nav-bar/nav-bar.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ProjectsPage from './pages/projects/projects.component';   \nimport FooterNav from './components/footer/footer.component';\nimport SideBar from './components/sidebar/sidebar.component'; \n\n\n// Smart Component\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    // State \n    this.state = {\n      sideBarOpen: false\n    } \n\n  }\n\n  // Handle Click method for our 'ToggleButton' component. \n  sideBarToggleClickHandler = () => {\n    this.setState ((prevState) => {\n      return {sideBarOpen: !prevState.sideBarOpen};\n    })\n  }; \n  \n\n  render() {\n    const Content = this.state.sideBarOpen ? <SideBar /> : null;\n\n    return (\n      <div className=\"App\" style={{height: '100%'}}>\n        <Switch>\n          <NavBar sideBarClickHandler={this.sideBarToggleClickHandler} closeSideBarHandler={this.closeSideBarClickHandler} />\n          {Content}\n          <Route exact path='/' component={HomePage} />\n          <Route path='/resume' component={ResumePage} />\n          <Route path='/projects' component={ProjectsPage} />\n          <FooterNav />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App /> \n    </BrowserRouter>\n, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}